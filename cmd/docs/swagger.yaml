definitions:
  request.CreateWord:
    properties:
      accented:
        example: весь
        minLength: 1
        type: string
      bare:
        example: весь
        minLength: 1
        type: string
      disable:
        example: false
        type: boolean
      level:
        enum:
        - A1
        - A2
        - B1
        - B2
        - C1
        - C2
        example: B1
        type: string
      type:
        enum:
        - adjective
        - noun
        - verb
        - adverb
        - other
        example: noun
        type: string
    required:
    - accented
    - bare
    type: object
  response.DeletedWord:
    properties:
      _id:
        example: 6835a2db5a859aff5197007a
        type: string
      bare:
        example: весь
        type: string
    type: object
  response.RetrievedWord:
    properties:
      _id:
        example: 6835a2db5a859aff5197007a
        type: string
      accented:
        example: весь
        type: string
      bare:
        example: весь
        type: string
      level:
        example: B1
        type: string
      type:
        example: noun
        type: string
    type: object
  wrapper.DeletedWordWrapper:
    properties:
      ok:
        example: true
        type: boolean
      result:
        $ref: '#/definitions/response.DeletedWord'
    type: object
  wrapper.ErrorBadRequestWrapper:
    properties:
      description:
        example: bad request
        type: string
      error_code:
        example: 400
        type: integer
      ok:
        example: false
        type: boolean
    type: object
  wrapper.ErrorInternalServerWrapper:
    properties:
      description:
        example: internal server error
        type: string
      error_code:
        example: 500
        type: integer
      ok:
        example: false
        type: boolean
    type: object
  wrapper.ErrorInvalidObjectIdWrapper:
    properties:
      description:
        example: invalid object id
        type: string
      error_code:
        example: 400
        type: integer
      ok:
        example: false
        type: boolean
    type: object
  wrapper.ErrorNotFoundWrapper:
    properties:
      description:
        example: data not found
        type: string
      error_code:
        example: 404
        type: integer
      ok:
        example: false
        type: boolean
    type: object
  wrapper.ErrorUnprocessableEntityWrapper:
    properties:
      description:
        example: unprocessable entity
        type: string
      error_code:
        example: 422
        type: integer
      ok:
        example: false
        type: boolean
    type: object
  wrapper.RetrievedWordWrapper:
    properties:
      ok:
        example: true
        type: boolean
      result:
        $ref: '#/definitions/response.RetrievedWord'
    type: object
info:
  contact:
    email: rodia2559@example.com
    name: Abolfazl Shahbazi
    url: https://github.com/joqd
  description: Russian Dictionary & Learning Platform.
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  title: Go Russian
  version: "1.0"
paths:
  /api/v1/words:
    post:
      consumes:
      - application/json
      description: Create a word with payload
      parameters:
      - description: Word formation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateWord'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/wrapper.RetrievedWordWrapper'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.ErrorBadRequestWrapper'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/wrapper.ErrorUnprocessableEntityWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.ErrorInternalServerWrapper'
      summary: Create a word
      tags:
      - words
  /api/v1/words/{bare}:
    delete:
      description: Delete a word from the database using its Bare (raw word)
      parameters:
      - description: Raw Word
        in: path
        name: bare
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/wrapper.DeletedWordWrapper'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/wrapper.ErrorNotFoundWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.ErrorInternalServerWrapper'
      summary: Delete a word
      tags:
      - words
    get:
      description: Retrieve a word from the database using its Bare (raw word)
      parameters:
      - description: Raw Word
        in: path
        name: bare
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/wrapper.RetrievedWordWrapper'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/wrapper.ErrorNotFoundWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.ErrorInternalServerWrapper'
      summary: Get a word by Bare
      tags:
      - words
  /api/v1/words/{id}:
    delete:
      description: Delete a word from the database using its ID
      parameters:
      - description: Word ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/wrapper.DeletedWordWrapper'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/wrapper.ErrorNotFoundWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.ErrorInternalServerWrapper'
      summary: Delete a word
      tags:
      - words
    get:
      description: Retrieve a word from the database using its ID
      parameters:
      - description: Word ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/wrapper.RetrievedWordWrapper'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.ErrorInvalidObjectIdWrapper'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/wrapper.ErrorNotFoundWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.ErrorInternalServerWrapper'
      summary: Get a word by ID
      tags:
      - words
schemes:
- http
swagger: "2.0"
