{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Russian dictionary for Persian speakers.",
        "title": "Ruskee",
        "contact": {
            "name": "Abolfazl Shahbazi",
            "url": "https://github.com/joqd",
            "email": "rodia2559@example.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "paths": {
        "/api/v1/words": {
            "post": {
                "description": "Create a word with payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "words"
                ],
                "summary": "Create a word",
                "parameters": [
                    {
                        "description": "Word formation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateWord"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/wrapper.RetrievedWordWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorBadRequestWrapper"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorUnprocessableEntityWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorInternalServerWrapper"
                        }
                    }
                }
            }
        },
        "/api/v1/words/{id}": {
            "get": {
                "description": "Retrieve a word from the database using its ID",
                "tags": [
                    "words"
                ],
                "summary": "Get a word by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Word ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/wrapper.RetrievedWordWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorInvalidObjectIdWrapper"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorNotFoundWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorInternalServerWrapper"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.CreateWord": {
            "type": "object",
            "required": [
                "accented",
                "bare"
            ],
            "properties": {
                "accented": {
                    "type": "string",
                    "minLength": 1,
                    "example": "весь"
                },
                "bare": {
                    "type": "string",
                    "minLength": 1,
                    "example": "весь"
                },
                "disable": {
                    "type": "boolean",
                    "example": false
                },
                "level": {
                    "type": "string",
                    "enum": [
                        "A1",
                        "A2",
                        "B1",
                        "B2",
                        "C1",
                        "C2"
                    ],
                    "example": "B1"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "adjective",
                        "noun",
                        "verb",
                        "adverb",
                        "other"
                    ],
                    "example": "noun"
                }
            }
        },
        "response.RetrievedWord": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "6835a2db5a859aff5197007a"
                },
                "accented": {
                    "type": "string",
                    "example": "весь"
                },
                "bare": {
                    "type": "string",
                    "example": "весь"
                },
                "level": {
                    "type": "string",
                    "example": "B1"
                },
                "type": {
                    "type": "string",
                    "example": "noun"
                }
            }
        },
        "wrapper.ErrorBadRequestWrapper": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "bad request"
                },
                "error_code": {
                    "type": "integer",
                    "example": 400
                },
                "ok": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "wrapper.ErrorInternalServerWrapper": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "internal server error"
                },
                "error_code": {
                    "type": "integer",
                    "example": 500
                },
                "ok": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "wrapper.ErrorInvalidObjectIdWrapper": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "invalid object id"
                },
                "error_code": {
                    "type": "integer",
                    "example": 400
                },
                "ok": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "wrapper.ErrorNotFoundWrapper": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "data not found"
                },
                "error_code": {
                    "type": "integer",
                    "example": 404
                },
                "ok": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "wrapper.ErrorUnprocessableEntityWrapper": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "unprocessable entity"
                },
                "error_code": {
                    "type": "integer",
                    "example": 422
                },
                "ok": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "wrapper.RetrievedWordWrapper": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "boolean",
                    "example": true
                },
                "result": {
                    "$ref": "#/definitions/response.RetrievedWord"
                }
            }
        }
    }
}